# Copyright 2016-2023 Nitor Creations Oy
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# https://setuptools.pypa.io/en/latest/userguide/dependency_management.html

[metadata]
name = nameless-deploy-tools
python_requires = >=3.7
description = Tools for deploying to AWS via CloudFormation and Serverless framework that support a pull request based workflow
description_file = README.md
author = Pasi Niemi
author_email = pasi@nitor.com
download_url = https://github.com/NitorCreations/nameless-deploy-tools/tarball/1.306
license = Apache 2.0
long_description = file: README.md
long_description_content_type = text/markdown
url = http://github.com/NitorCreations/nameless-deploy-tools
version = 1.306

[options]
packages = n_utils
zip_safe = False
install_requires =
    argcomplete
    boto3
    cloudformation-utils==0.0.2
    configparser
    ec2-utils>=0.38
    ipaddr
    jmespath
    nitor-vault>=0.41
    pyaml
    pycryptodomex
    Pygments
    pyOpenSSL>=19.1.0
    pyotp
    pyqrcode
    python-dateutil
    PyYAML>=5.2
    requests
    scandir
    six
    termcolor
    pypiwin32;platform_system=='Windows'
    win-unicode-console;platform_system=='Windows'
    wmi;platform_system=='Windows'
include_package_data = True
scripts =
    bin/create-shell-archive.sh
    bin/ensure-letsencrypt-certs.sh
    bin/lastpass-fetch-notes.sh
    bin/lpssh
    bin/encrypt-and-mount.sh
    bin/mount-and-format.sh
    bin/setup-fetch-secrets.sh
    bin/ssh-hostkeys-collect.sh
tests_require =
    coverage
    mock
    pytest-cov
    pytest-mock
    pytest

[options.entry_points]
console_scripts =
    associate-eip=n_utils.cli:associate_eip
    cf-logs-to-cloudwatch=ec2_utils.cli:log_to_cloudwatch
    cf-update-stack=n_utils.cli:update_stack
    ec2-associate-eip=n_utils.cli:associate_eip
    logs-to-cloudwatch=ec2_utils.cli:log_to_cloudwatch
    n-include-all=n_utils.cli:resolve_all_includes
    n-include=n_utils.cli:resolve_include
    nameless-dt-enable-profile=n_utils.profile_util:cli_enable_profile
    nameless-dt-load-project-env=n_utils.project_util:load_project_env
    nameless-dt-register-complete=n_utils.project_util:ndt_register_complete
    ndt=n_utils.ndt:ndt
    signal-cf-status=ec2_utils.cli:cf_signal_status

[aliases]
test = pytest

[tool:pytest]
addopts = --cov-config=.coveragerc --cov=n_utils/ --capture=sys

[flake8]
max-line-length = 120
max-complexity = 12
# E203 = Whitespace before ':'. Needed for Black compatibility
# C901 = Function is too complex
extend-ignore = E203, C901
exclude =
    __init__.py,
    __pycache__,
    .git/,
    .idea/,
    .vscode/,
    venv/,
    n_utils/yuuuu3332111i1l1i.py
